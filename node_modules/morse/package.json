{
  "author": {
    "name": "Cam Pedersen",
    "email": "diffference@gmail.com",
    "url": "http://campedersen.com/"
  },
  "name": "morse",
  "description": "Morse code for mad scientists",
  "version": "0.1.0",
  "repository": {
    "type": "git",
    "url": "git://github.com/ecto/morse.git"
  },
  "bin": {
    "morse": "bin/morse.js"
  },
  "main": "morse.js",
  "dependencies": {
    "optimist": "*"
  },
  "devDependencies": {},
  "optionalDependencies": {},
  "engines": {
    "node": "*"
  },
  "readme": "#morse\n\nA simple Morse code library for node\n\n![Samuel F.B. Morse](http://i.imgur.com/HHHTQ.jpg)\n\n## install\n\nFor use as a CLI:\n\n    npm install -g morse\n\nFor use as a library:\n\n    npm install morse\n\n## example usage as a CLI\n\n````\n$ morse -h\nUsage: morse [options] string\n\nOptions:\n  -d, --decode  Decode a string of Morse code  [boolean]\n  -h, --help    Show this text  \n\n$ morse hello > hello.txt\n$ morse -d \"`cat hello.txt`\"\nHELLO\n````\n\n## example usage as a library\n\n````javascript\nvar morse = require('morse');\n\nvar encoded = morse.encode('Hello, world.');\n// .... . .-.. .-.. --- --..-- ....... .-- --- .-. .-.. -.. .-.-.-\n\nmorse.decode(encoded);\n// HELLO, WORLD.\n````\n\n````javascript\nvar encoded = morse.encode([ 'hello', 'world' ]);\n// [ '.... . .-.. .-.. ---', '.-- --- .-. .-.. -..' ]\n\nmorse.decode(encoded);\n// [ 'HELLO', 'WORLD' ]\n````\n\n## methods\n\n### morse.encode(obj)\n\nEncodes and returns a given string or array\n\n### morse.decode(obj, dichotomic)\n\nDecodes and returns a string or array\n\n`dichotomic` defaults to false. If passed true, it will use a tree-based approach to decode the string or array. If false, a basic iteration of the map is used.\n\nThe dichotomic approach looks like this:\n\n![](http://i.imgur.com/Y1bnV.png)\n\nThe implementation does not include spaces right now, so it fails its test. However, it is otherwise accurate.\n\n````javascript\nmorse.decode(\n  morse.encode('Hello, world.'),\n  true\n);\n// HELLO,5WORLD.\n````\n\n## attributes\n\n### morse.map\n\nAn object containing `letter: morse` translations contained in `map.js`\n\n### morse.tree\n\nA tree-modeled object contained in `tree.js`\n\n## license\n\nMIT\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/ecto/morse/issues"
  },
  "homepage": "https://github.com/ecto/morse",
  "_id": "morse@0.1.0",
  "_from": "morse@latest"
}
